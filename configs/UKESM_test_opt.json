{
    "history": "Optimisation configuration for UKESM trial. Perturbing 4 model parameters ",
    "Developer_comment": "StudyConfig.py provides methods that work with this configuration file. Remember to change them if you change structure of this.",
    "version": 2,
    "version_comment": "Version ID",
    "Name": "optUKESM1",
    "Name_comment": "Study Name",
    "baseRunID": "aa",
    "baseRunID_comment": "base for runID. Only first two characters are generally used.",
    "runTime": null,
    "runTime_comment": "Time in seconds for run. ",
    "runCode": null,
    "runCode_comment": "Project code to run job under.",
    "machineName": "archer2",
    "machineName_comment": "Name of machine to submit runs to",
    "modelName": "UKESM",
    "modelName_comment": "Name of model that is ran",
    "optimiseFunction": null,
    "optimiseFunction_comment": "Name of optimisation function to run. null gives default",
    "fakeFunction": null,
    "fakeFunction_comment": "Name of fake function to use for testing. null gives default. Your fake fn should match your postProcess function which it fakes.",
    "runUpgrade_vn3": "For vn3 put all runXXX & function stuff in a runInfo block.",
    "Parameters": {
        "comment": "Information relevant to parameters. See Table 1 of Sexton et al, 2021 doi: 10.1007/s00382-021-05709-9 & UM",
        "comment_comment": "Would be nice if this information could be built by querying the reference model",
        "defaultParams": {
            "comment": "Default parameter values for HadGEM-GA10. null values or not set mean don't modify.  ",
            "DP_CORR_STRAT":10000.000,
            "DP_CORR_STRAT_comment": "Decorrelation scale pressure.",
            "TWO_D_FSD_FACTOR":1.5,
            "TWO_D_FSD_FACTOR_comment":"Scaling to make sub-grid cloud condensate variance to cloud cover and convective activity two dimensional.",
            "ENT_FAC_DP": 1.13,
            "ENT_FAC_DP_comment": "Deep entrainment amplitude",
            "AI": 2.57e-2,
            "AI_comment": "Linear scaling on pwer-law behaviour for ice mass -- ice density",
            "START_TIME": null,
            "START_TIME_comment": "Start_time as ISO time or  3 to 6 element array [YYYY,MM,DD,hh,mm,mm]",
            "RUN_TARGET": null,
            "RUN_TARGET_comment": "Run target -- time as ISO time delta or 3 to 6 element array to run for. "
        },
        "initParams": {
            "comment": "Intial values for parameters to be optimised. Set to null to use default values.  ",
            "DP_CORR_STRAT":null,
            "TWO_D_FSD_FACTOR":null,
            "ENT_FAC_DP": null,
            "AI": null
        },
        "initScale": false,
        "initScale_comment": "If true then startParams range from 0 to 1 where 0 means min value; 1 max value. Fails to work when values are null and initScale is true",
        "fixedParams": {
            "comment": " List of parameters and values that are fixed and not modified in optimisation. Set to null to use default values",
            "START_TIME": null,
            "RUN_TARGET": null
        },
        "fixedScale": false,
        "fixedScale_comment": "If true then scalable fixedParams range from 0 to 1 where 0 means min value; 1 max value.",
        "minmax": {
            "comment": "Defines the minimum and maximum ranges for the parameters. Must be defined for ALL parameters used. From Sexton et al, 2021. See https://github.com/qump-project/qump-hadgem3",
            "DP_CORR_STRAT":[2500.0,40000],
            "TWO_D_FSD_FACTOR":[1.0,2,0],
            "ENT_FAC_DP": [0,4.0],
            "AI": [6.1e-3,5.55e-2]
            },
        "steps": {
            "comment": "Steps for perturbations -- norm around 10% of the range. If not specified 10% will be used. None specified as DFOLS does not use",
            "STEPS": "Put step values here if wanted"
        }
    },
    "study": {
        "comment": "Parameters that specify the study. Used by framework and not by optimisation routines",
        "referenceModelDirectory": "$OPTCLIMTOP/Configurations/xhdiu_ia_tune",
        "referenceModelDirectory_comment": "Directory where reference model configuration exists. Default is START_DIR/start. ",
        "covariance": {
            "comment": "Covariance matrices and operations on them. If CovObsErr and CovIntVar are *both* specified then CovTotal will be computed from them. TODO MOVE coviariance info somewhere else..",
            "CovTotal": null,
            "CovTotal_Comment": "Name of file containing Covariance Matrix for total Error.",
            "CovTotalDiagonalise": false,
            "CovTotalDiagonalise_comment": "If true diagonalise the total covariance matrix",
            "CovIntVar": "$OPT_UKESM/covariance/cov_intvar_20.csv",
            "CovIntVar_Comment": "Name of file containing Covariance Matrix of Internal Variability.",
            "CovIntVarDiagonalise": false,
            "CovIntVarDiagonalise_comment": "If true diagonalise the internal variability covariance matrix",
            "CovObsErr": "$OPT_UKESM/covariance/cov_obserr_20.csv",
            "CovObsErr_Comment": "Name of file containing Covariance Matrix for Observational Error. ",
            "CovObsErrDiagonalise": true,
            "CovObsErrDiagonalise_comment": "If true diagonalise the Observational Error covariance matrix"
        },
        "ObsList": [
            "olr_nhx",
            "rsr_nhx",
            "lat_nhx",
            "lprecip_nhx",
            "mslp_nhx_dgm",
            "temp@500_nhx",
            "rh@500_nhx",
            "olr_tropics",
            "rsr_tropics",
            "lat_tropics",
            "lprecip_tropics",
            "mslp_tropics_dgm",
            "temp@500_tropics",
            "rh@500_tropics",
            "olr_shx",
            "rsr_shx",
            "lat_shx",
            "lprecip_shx",
            "temp@500_shx",
            "rh@500_shx"
        ],
        "ObsList_comment": "List of Observations that Algorithm uses which should be generated by post processing of model. ",
        "constraintName": "netflux_global",
        "constraintName_comment": "Name of constraint variable -- target value defined by targets/constraintName. "
    },
    "optimise": {
        "comment": "Parameters to control optimisation. This is used within DFOLS optimisation routines AND not by framework",
        "algorithm": "DFOLS",
        "algorithm_comment": "Algorithm wanted.",
        "sigma": true,
        "sigma_comment": "If True use constraint weights",
        "mu": 0.01,
        "mu_comment": "The inverse weighting given to the constraint -- it gets wt 1/(2mu). If Null then no constraint should be applied. TO UPDATE",
        "dfols": {
            "growing.ndirs_initial": null,
            "growing.ndirs_initial_comment": "the number of perturbations on first iteration. If not specified then will make Nparm perturbtions",
            "rhobeg": 0.18,
            "rhobeg_comment": "Radius of parameter trust region at start",
            "rhoend": 0.1,
            "rhoend_comment": "Radius of paramter trust region for termination (for our purpose this is in normalised parameters)",
            "maxfun": 20,
            "maxfun_comment": "Maximum number of model evaluations to be done. Default is O(1000).   ",
            "scaling_within_bounds": true,
            "scaling_within_bounds_comment": "Scale internally so all in range 0 to 1",
            "namedSettings": {
                "logging.save_poisedness": false,
                "logging.save_poisedness_comment": "whether or not  to calculate geometry statistics as part of diagnostic information",
                "init.random_initial_directions": true,
                "init.random_initial_directions_comment": "If true perturb in random directions. If true perturb along co-ordinate axis.",
                "init.run_in_parallel": true,
                "init.run_in_parallel_comment": "Run initial cases in parallel",
                "noise.additive_noise_level": 21.0,
                "noise.additive_noise_level_comment": "Estimate of noise in cost function. Used in termination -- nb cost fn is sum of squares **not** sum of squares/nObs. Note corrected 9/5/19 after d1061 had started. ",
                "logging.save_diagnostic_info": true,
                "logging.save_diagnostic_info_comment": "Save logging info",
                "logging.save_xk": true,
                "logging.save_xk_comment": "Save the full vector of trial values ",
                "noise.quit_on_noise_level": true,
                "noise.quit_on_noise_level_comment": "quit/restart if all trial evaluations are within noise level of last iteration",
                "general.check_objfun_for_overflow": false,
                "general.check_objfun_for_overflow_comment": "Presumably check that function behaves itself",
                "slow.history_for_slow": 2,
                "slow.history_for_slow_comment": "No of past successful iterations to look at to decide if slow or not",
                "slow.thresh_for_slow": 0.1,
                "slow.thresh_for_slow_comment": "Log cost function  change for slow converegence",
                "slow.max_slow_iters": 5,
                "slow.max_slow_iters_comment": "The number of itertions (once slow determined) to decide making slow progress",
                "restarts.use_restarts": true,
                "restarts.use_restarts_comment": "Restart when slow convergence or too noisy",
                "restarts.use_soft_restarts": true,
                "restarts.use_soft_restarts_comment": "Use soft restart -- reuse some existing points when  restarting",
                "restarts.soft.num_geom_steps": 3,
                "restarts.soft.num_geom_steps_comment": "How many extra runs to be done when restarting",
                "restarts.increase_npt": false,
                "restarts.increase_npt_comment": "Increase number of points when restarting",
                "restarts.increase_npt_amt_comment": "Number of points to increase by in restarts.increase_npt set when restarting",
                "restarts.max_unsuccessful_restarts": 100,
                "restarts.max_unsuccessful_restarts_comment": "Number of consecutive restarts allowed when no progress made",
                "restarts.hard.increase_ndirs_initial_amt": 1,
                "restarts.hard.increase_ndirs_initial_amt_comment": "How many points to increase by  when doing hard restart (not using any exisiting pts)",
                "restarts.max_npt": null,
                "restarts.max_npt_comment": "Maximum number of points/model evals in each restart",
                "tr_radius.gamma_dec": 0.8,
                "tr_radius.alpha1": 0.9,
                "tr_radius.alpha2": 0.95
            },
            "NamedSettings_comment": "Settings for named parameters that get passed into dfols via user_params"
        },
        "dfols_comment": "Settings for DFOLS"
    },
    "postProcess": {
        "comment": "Options to control post processing. Details depend on your post processing script. ",
        "script": "$OPT_UKESM/post_process/comp_sim_obs_UKESM_atmos.py",
        "script_comment": "Full path name -- including any environment variables you might have -- to postprocessing script",
        "outputPath": "observations.json",
        "outputPath_comment": "Name of output path relative to model dir and should be one of .nc, .json or .csv. Default is observations.nc. ",
        "note": "Specify mask_file -- file where l/s mask is, name of mask, start and end times",
        "mask_file": "$OPT_UKESM/configs/landfrac_N96.nc",
        "mask_file_comment": "Path to mask file. Example value is for N96 HadGEM3",
        "mask_name": "field36",
        "mask_name_comment": "Name of mask variable. Depends on file..",
        "mask_fraction": 0.5,
        "mask_fraction_comment": "Critical Fraction. Specify if mask file is a land/sea fraction. Values >= are land < sea. Set to null if mask is a t/f mask",
        "start_time": "2012-04-01",
        "start_time_comment": "Start time as ISO std string. ",
        "end_time": "2013-03-30",
        "end_time_comment": "End time as str of ISO std string"
    },
    "targets": {
        "comment": "Observed targets for optimisation. Should include constraint value. ",
        "rsr_nhx": 102.276779013,
        "rsr_tropics": 94.172585284,
        "rsr_shx": 108.113226173,
        "rsr_global": 99.5,
        "olr_nhx": 222.981135462,
        "olr_tropics": 259.889979681,
        "olr_shx": 216.123659078,
        "olr_global": 239.6,
        "lat_nhx": 275.837176497,
        "lat_tropics": 297.551167045,
        "lat_shx": 287.433252179,
        "lprecip_nhx": 1.67274541294e-05,
        "lprecip_tropics": 3.61223235446e-05,
        "lprecip_shx": 2.23188435704e-05,
        "mslp_nhx_dgm": 330.683773931,
        "mslp_tropics_dgm": 178.755937185,
        "temp@500_nhx": 251.407284938,
        "temp@500_tropics": 266.733035653,
        "temp@500_shx": 248.927897989,
        "rh@500_nhx": 53.4221821948,
        "rh@500_tropics": 33.9426666031,
        "rh@500_shx": 52.6728738156,
        "netflux_global": 0.7,
        "netflux_global_comment": "Often used as a constraint.."
    },
    "scalings": {
        "comment": "Scalings on observables -- only defined when not 1.0. ",
        "lprecip_nhx": 86400.0,
        "lprecip_tropics": 86400.0,
        "lprecip_shx": 86400.0,
        "mslp_global": 0.01,
        "mslp_nhx_dgm": 0.01,
        "mslp_tropics_dgm": 0.01
    },
    "standardModel": {
        "SimulatedValues": {
            "comment": "Values from Initial Cond hadAM3 ensemble -- used for display. ",
            "rsr_nhx": 104.828645378,
            "rsr_tropics": 96.1125810912,
            "rsr_shx": 106.220769668,
            "rsr_global": 100.640785304,
            "olr_nhx": 219.239170954,
            "olr_tropics": 260.168543324,
            "olr_shx": 212.43007422,
            "olr_global": 238.839351859,
            "lat_nhx": 273.33065608,
            "lat_tropics": 295.525024032,
            "lat_shx": 286.028285954,
            "lprecip_nhx": 1.93355069031e-05,
            "lprecip_tropics": 3.31722810623e-05,
            "lprecip_shx": 2.19885246512e-05,
            "mslp_nhx_dgm": 500.077320213,
            "mslp_tropics_dgm": 145.528208095,
            "temp@500_nhx": 250.103101527,
            "temp@500_tropics": 266.024844065,
            "temp@500_shx": 247.127341727,
            "rh@500_nhx": 57.1694930762,
            "rh@500_tropics": 35.4667676984,
            "rh@500_shx": 57.1532300099,
            "netflux_global": 1.11525220386
        }
    }
}
